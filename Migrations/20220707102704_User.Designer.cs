// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolomonCookBook.Data;

#nullable disable

namespace SolomonCookBook.Migrations
{
    [DbContext(typeof(TheDbContext))]
    [Migration("20220707102704_User")]
    partial class User
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SolomonCookBook.Models.Recepie_Comments", b =>
                {
                    b.Property<int>("R_Comment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("R_Comment_ID"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Recepie_ID")
                        .HasColumnType("int");

                    b.Property<int?>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("R_Comment_ID");

                    b.HasIndex("Recepie_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Recepie_Comments");
                });

            modelBuilder.Entity("SolomonCookBook.Models.Recepie_likes", b =>
                {
                    b.Property<int>("R_like_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("R_like_ID"), 1L, 1);

                    b.Property<int?>("Recepie_ID")
                        .HasColumnType("int");

                    b.Property<int?>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("R_like_ID");

                    b.HasIndex("Recepie_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Recepie_Likes");
                });

            modelBuilder.Entity("SolomonCookBook.Models.Recepies", b =>
                {
                    b.Property<int>("Recepie_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Recepie_ID"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Recepie_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("video_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Recepie_ID");

                    b.ToTable("Recepies");
                });

            modelBuilder.Entity("SolomonCookBook.Models.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SolomonCookBook.Models.Recepie_Comments", b =>
                {
                    b.HasOne("SolomonCookBook.Models.Recepies", "Recepie")
                        .WithMany()
                        .HasForeignKey("Recepie_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolomonCookBook.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_ID");

                    b.Navigation("Recepie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SolomonCookBook.Models.Recepie_likes", b =>
                {
                    b.HasOne("SolomonCookBook.Models.Recepies", "Recepie")
                        .WithMany()
                        .HasForeignKey("Recepie_ID");

                    b.HasOne("SolomonCookBook.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_ID");

                    b.Navigation("Recepie");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
